table inet firewall {
    # ---------
    # Variables
    # ---------
    # define DNS_PORT = 53
    # define HTTP_PORT = 80
    # define HTTPS_PORT = 443
    define SSH_PORT = 22
    define FLOOD_PORT = 80
    define REVSH_PORT = 8080

    # -----
    # INPUT
    # -----
    chain input {
        type filter hook input priority 0; policy drop;

        # Count every packet that hits INPUT
        counter comment "INPUT counter"

        # Always allow loopback
        iif lo accept

        # Drop XMAS scan
        tcp flags & (fin|psh|urg) == (fin|psh|urg) log prefix "XMAS in:" counter drop

        # Drop FIN only scan
        tcp flags & (fin) == (fin) log prefix "FIN in:" counter drop

        # Drop UDP on 80
        udp dport $FLOOD_PORT log prefix "UDP Flood in:" counter drop

        # Drop reverse shell
        tcp dport $REVSH_PORT log prefix "Reverse Shell:" counter drop

        # Permit established and related return traffic
        ct state { established, related } accept

        # Allow incoming DNS to this host (UDP and TCP)
        # meta 14proto udp udp dport $DNS_PORT ct state { new, established } accept
        # meta 14proto tcp tcp dport $DNS_PORT ct state { new, established } accept

        # Allow incoming SSH
        tcp dport $SSH_PORT ct state new accept
    }

    # ---------
    # FORWARD
    # ---------
    chain forward {
        type filter hook forward priority 0; policy drop;

        # Count every packet that hits FORWARD
        counter comment "FORWARD counter"

        # Drop suspicious TCP scans (SYN|FIN) transiting the host
        tcp flags & (syn|fin) == (syn|fin) log prefix "SYN-FIN fwd:" counter drop

        # Drop XMAS scan
        tcp flags & (fin|psh|urg) == (fin|psh|urg) log prefix "XMAS fwd:" counter drop

        # Drop FIN only scan
        tcp flags & (fin) == (fin) log prefix "FIN fwd:" counter drop

        # Drop UDP on 80
        udp dport $FLOOD_PORT log prefix "UDP Flood fwd:" counter drop

        # Drop reverse shell
        tcp dport $REVSH_PORT log prefix "Reverse Shell:" counter drop

        # Permit established and related return traffic
        ct state { established, related } accept

        # No new forwarded sessions are permitted
    }

    # -------
    # OUTPUT
    # -------
    chain output {
        type filter hook output priority 0; policy drop;

        # Count every packet that hits OUTPUT
        counter comment "OUTPUT counter"

        # Always allow loopback
        oif lo accept

        # Drop XMAS scan
        tcp flags & (fin|psh|urg) == (fin|psh|urg) log prefix "XMAS out:" counter drop

        # Drop FIN only scan
        tcp flags & (fin) == (fin) log prefix "FIN out:" counter drop

        # Drop UDP flood
        udp dport $FLOOD_PORT log prefix "UDP Flood out:" counter drop

        # Drop reverse shell
        tcp dport $REVSH_PORT log prefix "Reverse Shell:" counter drop

        # Permit replies to sessions we created
        ct state { established, related } accept

        # Allow DNS queries (UDP and TCP)
        # meta 14proto udp udp dport $DNS_PORT ct state new accept
        # meta 14proto tcp tcp dport $DNS_PORT ct state new accept

        # Allow HTTP and HTTPS
        # tcp dport { $HTTP_PORT, $HTTPS_PORT } ct state new accept
    }
}
